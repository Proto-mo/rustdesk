name: Build RustDesk Client (custom server, vcpkg opus)

on:
  workflow_dispatch:

jobs:
  build-win-msvc:
    runs-on: windows-latest
    env:
      # === ваши переменные в Settings → Actions → Variables ===
      RENDEZVOUS_SERVER: ${{ vars.RENDEZVOUS_SERVER }}   # hbbs: host:port (напр., hbbs.example.com:21115)
      RS_PUB_KEY:        ${{ vars.RS_PUB_KEY }}          # публичный ключ из id_ed25519.pub одной строкой (ssh-ed25519 AAAA...)
      RELAY_SERVER:      ${{ vars.RELAY_SERVER }}        # опц.: hbbr:port (напр., hbbr.example.com:21117)
      # Диагностика
      RUST_BACKTRACE: "1"
      CARGO_TERM_COLOR: always
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"

    steps:
      - name: Checkout this CI repo
        uses: actions/checkout@v4

      # Чистим каталог на случай повтора (убирает '… already exists')
      - name: Cleanup previous clone
        shell: cmd
        run: |
          if exist rustdesk rmdir /s /q rustdesk

      # Клонируем ИМЕННО клиент rustdesk в ./rustdesk
      - name: Clone RustDesk (client)
        shell: cmd
        run: |
          git config --global core.longpaths true
          git clone https://github.com/rustdesk/rustdesk.git rustdesk

      # Инициализация сабмодулей ОТ КОРНЯ репозитория клиента
      - name: Init submodules (recursive, from repo root)
        shell: cmd
        run: |
          git -C rustdesk submodule sync --recursive
          git -C rustdesk submodule update --init --recursive
          dir rustdesk
          if exist rustdesk\libs dir rustdesk\libs

      # Rust (MSVC)
      - name: Setup Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      # Flutter для GUI
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter doctor
        shell: pwsh
        run: flutter doctor -v

      # Инструменты: ставим через cmd (без refreshenv)
      - name: Install build tools (cmd)
        shell: cmd
        run: |
          choco install cmake ninja -y --no-progress
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --quiet --norestart" -y --no-progress
          cmake --version
          ninja --version

      # vcpkg + Opus для magnum-opus
      - name: Setup vcpkg and install opus:x64-windows
        shell: cmd
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          .\vcpkg\vcpkg.exe install opus:x64-windows
          echo %CD%\vcpkg\installed\x64-windows\bin>>%GITHUB_PATH%
          echo %CD%\vcpkg\installed\bin>>%GITHUB_PATH%

      # Быстрая проверка переменных
      - name: Print custom vars
        shell: pwsh
        run: |
          echo "RENDEZVOUS_SERVER=$env:RENDEZVOUS_SERVER"
          if ($env:RELAY_SERVER) { echo "RELAY_SERVER=$env:RELAY_SERVER" }
          echo "RS_PUB_KEY length: $($env:RS_PUB_KEY.Length)"

      # Сборка: задаём VCPKG_ROOT/TRIPLET прямо в этом шаге
      - name: Build RustDesk (release, MSVC) with vcpkg env
        working-directory: rustdesk
        shell: pwsh
        env:
          RENDEZVOUS_SERVER: ${{ env.RENDEZVOUS_SERVER }}
          RELAY_SERVER:      ${{ env.RELAY_SERVER }}
          RS_PUB_KEY:        ${{ env.RS_PUB_KEY }}
        run: |
          $env:VCPKG_ROOT = Join-Path $env:GITHUB_WORKSPACE "vcpkg"
          $env:VCPKG_DEFAULT_TRIPLET = "x64-windows"
          # Если хотите статическую линковку через vcpkg-rs:
          # $env:VCPKGRS_DYNAMIC = "0"

          Write-Host "VCPKG_ROOT=$env:VCPKG_ROOT"
          Write-Host "VCPKG_DEFAULT_TRIPLET=$env:VCPKG_DEFAULT_TRIPLET"

          cargo --version
          rustc --version
          $env:CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG = "true"
          cargo build --release -v --package rustdesk

      - name: List artifact
        shell: pwsh
        run: dir rustdesk\target\release\rustdesk.exe

      - name: Upload artifact (EXE)
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-msvc
          path: rustdesk/target/release/rustdesk.exe
