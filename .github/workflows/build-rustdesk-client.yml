name: Build RustDesk Client (custom server, vcpkg opus static, VS env)

on:
  workflow_dispatch:

jobs:
  build-win-msvc:
    runs-on: windows-latest
    env:
      RENDEZVOUS_SERVER: ${{ vars.RENDEZVOUS_SERVER }}  # hbbs: host:21115
      RS_PUB_KEY:        ${{ vars.RS_PUB_KEY }}         # ssh-ed25519 AAAA... (одной строкой)
      RELAY_SERVER:      ${{ vars.RELAY_SERVER }}       # hbbr: host:21117 (опционально)
      RUST_BACKTRACE: "1"
      CARGO_TERM_COLOR: always
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"

    steps:
      - name: Checkout this CI repo
        uses: actions/checkout@v4

      - name: Cleanup previous clone
        shell: cmd
        run: |
          if exist rustdesk rmdir /s /q rustdesk
          if exist vcpkg rmdir /s /q vcpkg

      - name: Clone RustDesk (client)
        shell: cmd
        run: |
          git config --global core.longpaths true
          git clone https://github.com/rustdesk/rustdesk.git rustdesk

      - name: Init submodules (recursive, from repo root)
        shell: cmd
        run: |
          git -C rustdesk submodule sync --recursive
          git -C rustdesk submodule update --init --recursive
          if exist rustdesk\libs dir rustdesk\libs

      - name: Setup Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter doctor
        shell: pwsh
        run: flutter doctor -v

      - name: Install build tools (cmd)
        shell: cmd
        run: |
          choco install cmake ninja -y --no-progress
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --quiet --norestart" -y --no-progress
          cmake --version
          ninja --version

      - name: Setup vcpkg and install opus (dynamic + static)
        shell: cmd
        run: |
          git clone https://github.com/microsoft/vcpkg.git
          .\vcpkg\bootstrap-vcpkg.bat
          rem Ставим обе вариации, чтобы точно были include/lib под static:
          .\vcpkg\vcpkg.exe install opus:x64-windows opus:x64-windows-static

      # ВАЖНО: тут используем один cmd-шаг,
      # 1) активируем VS среду (VsDevCmd.bat),
      # 2) задаём VCPKG_* и BINDGEN_EXTRA_CLANG_ARGS,
      # 3) вызываем cargo build.
      - name: Build RustDesk (release, MSVC) inside VS DevCmd + vcpkg env
        shell: cmd
        working-directory: rustdesk
        env:
          RENDEZVOUS_SERVER: ${{ env.RENDEZVOUS_SERVER }}
          RELAY_SERVER:      ${{ env.RELAY_SERVER }}
          RS_PUB_KEY:        ${{ env.RS_PUB_KEY }}
        run: |
          call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=x64

          set VCPKG_ROOT=%GITHUB_WORKSPACE%\vcpkg
          set VCPKG_DEFAULT_TRIPLET=x64-windows-static
          set VCPKG_TARGET_TRIPLET=x64-windows-static
          rem Прокинем include vcpkg для bindgen/clang:
          set BINDGEN_EXTRA_CLANG_ARGS=-I%VCPKG_ROOT%\installed\%VCPKG_TARGET_TRIPLET%\include

          echo VCPKG_ROOT=%VCPKG_ROOT%
          echo VCPKG_DEFAULT_TRIPLET=%VCPKG_DEFAULT_TRIPLET%
          echo VCPKG_TARGET_TRIPLET=%VCPKG_TARGET_TRIPLET%
          echo BINDGEN_EXTRA_CLANG_ARGS=%BINDGEN_EXTRA_CLANG_ARGS%

          rustc --version
          cargo --version
          set CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG=true

          cargo build --release -v --package rustdesk

      - name: Upload artifact (EXE)
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-msvc
          path: rustdesk/target/release/rustdesk.exe
