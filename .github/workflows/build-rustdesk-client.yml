name: Build RustDesk Client (custom server, vcpkg manifest, MSVC)

on:
  workflow_dispatch:

jobs:
  build-win-msvc:
    runs-on: windows-latest
    env:
      # ваши переменные в Settings → Actions → Variables:
      RENDEZVOUS_SERVER: ${{ vars.RENDEZVOUS_SERVER }}   # hbbs: host:port, напр. hbbs.example.com:21115
      RS_PUB_KEY:        ${{ vars.RS_PUB_KEY }}          # ssh-ed25519 AAAA... (одной строкой)
      RELAY_SERVER:      ${{ vars.RELAY_SERVER }}        # опц.: hbbr:port, напр. hbbr.example.com:21117
      RUST_BACKTRACE: "1"
      CARGO_TERM_COLOR: always
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"

    steps:
      - name: Checkout this CI repo
        uses: actions/checkout@v4

      - name: Cleanup previous run
        shell: cmd
        run: |
          if exist rustdesk rmdir /s /q rustdesk
          if exist _vcpkg rmdir /s /q _vcpkg

      # Клонируем ИМЕННО клиент rustdesk и инициализируем сабмодули
      - name: Clone RustDesk (client) + submodules
        shell: cmd
        run: |
          git config --global core.longpaths true
          git clone https://github.com/rustdesk/rustdesk.git rustdesk
          git -C rustdesk submodule sync --recursive
          git -C rustdesk submodule update --init --recursive

      - name: Setup Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter doctor
        shell: pwsh
        run: flutter doctor -v

      - name: Install build tools (cmd)
        shell: cmd
        run: |
          choco install cmake ninja -y --no-progress
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --quiet --norestart" -y --no-progress
          cmake --version
          ninja --version

      # Ставим vcpkg в _vcpkg
      - name: Bootstrap vcpkg
        shell: cmd
        run: |
          git clone https://github.com/microsoft/vcpkg.git _vcpkg
          call _vcpkg\bootstrap-vcpkg.bat

      # MANIFEST MODE: установка зависимостей из rustdesk/vcpkg.json
      # 1) статический триплет
      - name: vcpkg install (manifest, x64-windows-static)
        shell: cmd
        working-directory: rustdesk
        run: |
          ..\_vcpkg\vcpkg.exe install --triplet x64-windows-static --vcpkg-root ..\_vcpkg

      # 2) динамический триплет (на случай fallback)
      - name: vcpkg install (manifest, x64-windows)
        shell: cmd
        working-directory: rustdesk
        run: |
          ..\_vcpkg\vcpkg.exe install --triplet x64-windows --vcpkg-root ..\_vcpkg

      # Проверяем, что заголовки Opus реально появились
      - name: Verify Opus headers presence
        shell: cmd
        run: |
          if exist _vcpkg\installed\x64-windows-static\include\opus\opus_multistream.h (
            echo OK: static opus headers present
          ) else if exist _vcpkg\installed\x64-windows\include\opus\opus_multistream.h (
            echo OK: dynamic opus headers present (fallback will be used)
          ) else (
            echo FATAL: Opus headers not found in either triplet.
            dir _vcpkg\installed
            exit /b 1
          )

      - name: Print custom vars
        shell: pwsh
        run: |
          echo "RENDEZVOUS_SERVER=$env:RENDEZVOUS_SERVER"
          if ($env:RELAY_SERVER) { echo "RELAY_SERVER=$env:RELAY_SERVER" }
          echo "RS_PUB_KEY length: $($env:RS_PUB_KEY.Length)"

      # Сборка в одном cmd-шаге: VsDevCmd + выбор триплета по наличию заголовков
      - name: Build RustDesk (release, MSVC) in VS DevCmd + vcpkg env
        shell: cmd
        working-directory: rustdesk
        env:
          RENDEZVOUS_SERVER: ${{ env.RENDEZVOUS_SERVER }}
          RELAY_SERVER:      ${{ env.RELAY_SERVER }}
          RS_PUB_KEY:        ${{ env.RS_PUB_KEY }}
        run: |
          rem 1) Активируем MSVC/SDK среду
          if exist "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" (
            call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=x64
          ) else (
            call "C:\Program Files\Microsoft Visual Studio\2022\BuildTools\Common7\Tools\VsDevCmd.bat" -arch=x64
          )

          rem 2) VCPKG_ROOT → _vcpkg
          set VCPKG_ROOT=%GITHUB_WORKSPACE%\_vcpkg

          rem 3) Выбор статик/динамик по наличию заголовков
          if exist "%VCPKG_ROOT%\installed\x64-windows-static\include\opus\opus_multistream.h" (
            echo === Using STATIC triplet ===
            set VCPKG_DEFAULT_TRIPLET=x64-windows-static
            set VCPKG_TARGET_TRIPLET=x64-windows-static
            set VCPKGRS_DYNAMIC=0
            set BINDGEN_EXTRA_CLANG_ARGS=-I%VCPKG_ROOT%\installed\x64-windows-static\include
          ) else (
            echo === Using DYNAMIC triplet (fallback) ===
            set VCPKG_DEFAULT_TRIPLET=x64-windows
            set VCPKG_TARGET_TRIPLET=x64-windows
            set VCPKGRS_DYNAMIC=1
            set BINDGEN_EXTRA_CLANG_ARGS=-I%VCPKG_ROOT%\installed\x64-windows\include
          )

          echo VCPKG_ROOT=%VCPKG_ROOT%
          echo VCPKG_DEFAULT_TRIPLET=%VCPKG_DEFAULT_TRIPLET%
          echo VCPKG_TARGET_TRIPLET=%VCPKG_TARGET_TRIPLET%
          echo VCPKGRS_DYNAMIC=%VCPKGRS_DYNAMIC%
          echo BINDGEN_EXTRA_CLANG_ARGS=%BINDGEN_EXTRA_CLANG_ARGS%

          rem 4) Сборка клиента
          rustc --version
          cargo --version
          set CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG=true
          cargo build --release -v --package rustdesk

      - name: Upload artifact (EXE)
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-msvc
          path: rustdesk/target/release/rustdesk.exe
