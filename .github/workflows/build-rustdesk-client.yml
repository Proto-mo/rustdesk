name: Build RustDesk Client (custom server, vcpkg classic+manifest via lukka, MSVC)
on:
  workflow_dispatch:

jobs:
  build-win-msvc:
    runs-on: windows-latest
    env:
      RENDEZVOUS_SERVER: ${{ vars.RENDEZVOUS_SERVER }}
      RS_PUB_KEY:        ${{ vars.RS_PUB_KEY }}
      RELAY_SERVER:      ${{ vars.RELAY_SERVER }}
      RUST_BACKTRACE: "1"
      CARGO_TERM_COLOR: always
      CARGO_NET_GIT_FETCH_WITH_CLI: "true"

    steps:
      - name: Checkout this CI repo
        uses: actions/checkout@v4

      - name: Cleanup previous run
        shell: cmd
        run: |
          if exist rustdesk rmdir /s /q rustdesk

      - name: Clone RustDesk (client) + submodules
        shell: cmd
        run: |
          git config --global core.longpaths true
          git clone https://github.com/rustdesk/rustdesk.git rustdesk
          git -C rustdesk submodule sync --recursive
          git -C rustdesk submodule update --init --recursive

      - name: Setup Rust (MSVC)
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-msvc

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter doctor
        shell: pwsh
        run: flutter doctor -v

      - name: Install build tools (cmd)
        shell: cmd
        run: |
          choco install cmake ninja -y --no-progress
          choco install visualstudio2022buildtools --package-parameters "--add Microsoft.VisualStudio.Workload.VCTools --quiet --norestart" -y --no-progress
          cmake --version
          ninja --version

      # vcpkg bootstrap/cache через lukka (создаёт VCPKG_ROOT и кэш)
      - name: setup-vcpkg (x64-windows-static)
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ''
          vcpkgDirectory: ${{ runner.temp }}\vcpkg
          vcpkgJsonGlob: rustdesk/vcpkg.json
          triplet: x64-windows-static
          appendedCacheKey: rustdesk-static

      - name: setup-vcpkg (x64-windows)
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: ''
          vcpkgDirectory: ${{ runner.temp }}\vcpkg
          vcpkgJsonGlob: rustdesk/vcpkg.json
          triplet: x64-windows
          appendedCacheKey: rustdesk-dynamic

      # >>> КЛЮЧЕВОЕ ДОБАВЛЕНИЕ <<<
      # Форсируем classic-mode (без manifests) и явно ставим нужные порты.
      - name: vcpkg classic install (static: opus, libvpx, libyuv)
        shell: cmd
        run: |
          set VCPKG_FEATURE_FLAGS=-manifests
          "%VCPKG_ROOT%\vcpkg.exe" install opus:x64-windows-static libvpx:x64-windows-static libyuv:x64-windows-static
          if exist "%VCPKG_ROOT%\installed\x64-windows-static\include\opus" dir "%VCPKG_ROOT%\installed\x64-windows-static\include\opus"

      - name: vcpkg classic install (dynamic: opus)
        shell: cmd
        run: |
          set VCPKG_FEATURE_FLAGS=-manifests
          "%VCPKG_ROOT%\vcpkg.exe" install opus:x64-windows
          if exist "%VCPKG_ROOT%\installed\x64-windows\include\opus" dir "%VCPKG_ROOT%\installed\x64-windows\include\opus"

      # Автопоиск opus_multistream.h и экспорт CHOSEN_TRIPLET/INCLUDE_BASE/VCPKGRS_DYNAMIC
      - name: Locate Opus headers and export env
        shell: pwsh
        run: |
          $root = $env:VCPKG_ROOT
          Write-Host "VCPKG_ROOT = $root"
          $hits = Get-ChildItem -Path "$root/installed" -Recurse -Filter 'opus_multistream.h' -ErrorAction SilentlyContinue
          if (-not $hits) {
            Write-Host "FATAL: opus_multistream.h not found under $root/installed"
            Get-ChildItem -Path "$root/installed" -Recurse -ErrorAction SilentlyContinue | Select-Object FullName | Out-Host
            exit 1
          }
          $hit = ($hits | Where-Object { $_.FullName -match 'x64-windows-static' } | Select-Object -First 1)
          if (-not $hit) { $hit = $hits | Where-Object { $_.FullName -match 'x64-windows' } | Select-Object -First 1 }
          $includeOpus = Split-Path $hit.FullName -Parent
          $includeBase = Split-Path $includeOpus -Parent
          $triplet = Split-Path (Split-Path $includeBase -Parent) -Leaf
          $dyn = if ($triplet -eq 'x64-windows-static') { '0' } else { '1' }

          "CHOSEN_TRIPLET=$triplet"   | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "INCLUDE_BASE=$includeBase" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
          "VCPKGRS_DYNAMIC=$dyn"      | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

          Write-Host "Chosen triplet: $triplet"
          Write-Host "Include base   : $includeBase"
          Write-Host "VCPKGRS_DYNAMIC: $dyn"

      # Сборка: сохраняем/восстанавливаем VCPKG_ROOT вокруг VsDevCmd, применяем найденные значения
      - name: Build RustDesk (release, MSVC)
        shell: cmd
        working-directory: rustdesk
        env:
          RENDEZVOUS_SERVER: ${{ env.RENDEZVOUS_SERVER }}
          RELAY_SERVER:      ${{ env.RELAY_SERVER }}
          RS_PUB_KEY:        ${{ env.RS_PUB_KEY }}
        run: |
          rem 0) Сохраняем VCPKG_ROOT от lukka/run-vcpkg
          set "_VCPKG_ROOT=%VCPKG_ROOT%"

          rem 1) Активируем MSVC/SDK (это перезапишет VCPKG_ROOT)
          if exist "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" (
            call "C:\Program Files\Microsoft Visual Studio\2022\Enterprise\Common7\Tools\VsDevCmd.bat" -arch=x64
          ) else (
            call "C:\Program Files\Microsoft Visual Studio\2022\BuildTools\Common7\Tools\VsDevCmd.bat" -arch=x64
          )

          rem 2) Восстанавливаем VCPKG_ROOT
          set "VCPKG_ROOT=%_VCPKG_ROOT%"
          echo Restored VCPKG_ROOT=%VCPKG_ROOT%

          rem 3) Применяем выбранный триплет/инклюды
          set VCPKG_DEFAULT_TRIPLET=%CHOSEN_TRIPLET%
          set VCPKG_TARGET_TRIPLET=%CHOSEN_TRIPLET%
          set BINDGEN_EXTRA_CLANG_ARGS=-I"%INCLUDE_BASE%"

          echo VCPKG_DEFAULT_TRIPLET=%VCPKG_DEFAULT_TRIPLET%
          echo VCPKG_TARGET_TRIPLET=%VCPKG_TARGET_TRIPLET%
          echo VCPKGRS_DYNAMIC=%VCPKGRS_DYNAMIC%
          echo BINDGEN_EXTRA_CLANG_ARGS=%BINDGEN_EXTRA_CLANG_ARGS%

          rustc --version
          cargo --version
          set CARGO_PROFILE_RELEASE_BUILD_OVERRIDE_DEBUG=true
          cargo build --release -v --package rustdesk

      - name: Upload artifact (EXE)
        uses: actions/upload-artifact@v4
        with:
          name: rustdesk-windows-msvc
          path: rustdesk/target/release/rustdesk.exe
